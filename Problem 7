/**
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
What is the 10,001st prime number?
 */
public class Problem7 {
 private static int counter;
    private static int prime;
    
     //Method for checking if a number is prime
    public static void primeChecker (long num) {
        boolean pCheck = true; //if the value remains true then the number is prime
        for (long i=2; i<num; i++){
                    if (num%i==0) {
                        pCheck = false;//no remainder means it's not prime 
                        break;
                    }
                }
        if (pCheck) {
            counter = counter + 1;
        }
        
    }
    
    //Method for generating numbers to be checked
    public static void numberGen (long num) {
        for (int i=2; counter<num; i++) {
            primeChecker(i);
            if (counter==num) {
                prime = i;
            }
        }
    }
    public static void main(String[] args) {
       numberGen(10001);
       System.out.println("Counter "+counter+":"+"Prime "+prime+":");
    }
    
}
